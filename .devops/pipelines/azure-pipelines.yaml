name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
# - stage: Build
#   jobs:
#   - job: Build
#     pool:
#       name: Hosted Ubuntu 1604
#     steps:
#     # Needed for Terraform VM deployment
#     # - task: InstallSSHKey@0
#     #   inputs:
#     #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
#     #     sshPublicKey: 'PUBLIC_KEY'
#     #     sshKeySecureFile: 'id_rsa'
#     - task: ArchiveFiles@2
#       displayName: 'Archive FakeRestAPI'
#       inputs:
#         rootFolderOrFile: 'path/to/fakerestapi'
#         includeRootFolder: false
#         archiveType: 'zip'
#         archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
#     - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
#       displayName: 'Upload Package'
#       artifact: drop-fakerestapi
# - stage:
#   jobs:
#   - deployment: FakeRestAPI
#     pool:
#       vmImage: 'Ubuntu-16.04'
#     environment: 'TEST'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App'
#             inputs:
#               azureSubscription: ''
#               appName: ''
#               appType: webApp
#               package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path
- stage: IntegrationTests
  jobs:
  - job: PostmanTests
    displayName: PostmanTests
    steps: 
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
    - task: CmdLine@2
      inputs:
        script: 'npm install newman'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: CmdLine@2
      inputs:
        script: 'newman run automatedtesting\postman\StarterAPIs.json --reporters cli,junit --reporter-junit-export Results\junitReport.xml'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'Results\junitReport.xml'