{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "FakeRestAPI.Web",
        "description": "Fake Rest API on cloud for testing your application.",
        "contact": {
            "name": "Emanuele B.",
            "url": "http://www.emanuelebartolesi.com",
            "email": "emanueleb@outlook.com"
        }
    },
    "host": "was-eqr.azurewebsites.net",
    "schemes": [
        "https"
    ],
    "paths": {
        "/api/Activities": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Gets all Activities.",
                "operationId": "Activities_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Activity"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Posts an activity.",
                "operationId": "Activities_Post",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "activity",
                        "in": "body",
                        "description": "The activity model.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Activity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Activities/{id}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Gets the activity with the specified identifier.",
                "operationId": "Activities_Get_Single",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The activity identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Activities"
                ],
                "summary": "Puts an activity.",
                "operationId": "Activities_Put",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "activity",
                        "in": "body",
                        "description": "The activity.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Activity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Deletes the specified activity.",
                "operationId": "Activities_Delete",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The activity identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/authors/books/{idBook}": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Authors for book.",
                "operationId": "Authors_AuthorsForBook",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "idBook",
                        "in": "path",
                        "description": "The book identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Authors": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Gets all Authors.",
                "operationId": "Authors_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Author"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Authors"
                ],
                "summary": "Posts an author.",
                "operationId": "Authors_Post",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "author",
                        "in": "body",
                        "description": "The author.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Author"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Authors/{id}": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Gets the specified author.",
                "operationId": "Authors_Get_Single",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The author identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Authors"
                ],
                "summary": "Puts an author.",
                "operationId": "Authors_Put",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The author identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "author",
                        "in": "body",
                        "description": "The author.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Author"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Authors"
                ],
                "summary": "Deletes the specified author.",
                "operationId": "Authors_Delete",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The author identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Gets all books.",
                "operationId": "Books_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Book"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Posts the book.",
                "operationId": "Books_Post",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "book",
                        "in": "body",
                        "description": "The book.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Books/{id}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Gets the specified book.",
                "operationId": "Books_Get_Single",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The book identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Puts the specified book.",
                "operationId": "Books_Put",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "book",
                        "in": "body",
                        "description": "The book.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Deletes the specified book.",
                "operationId": "Books_Delete",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The book identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/books/covers/{idBook}": {
            "get": {
                "tags": [
                    "CoverPhotos"
                ],
                "summary": "Covers the cover photos for book.",
                "operationId": "CoverPhotos_CoverPhotosForBook",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "idBook",
                        "in": "path",
                        "description": "The book identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/CoverPhotos": {
            "get": {
                "tags": [
                    "CoverPhotos"
                ],
                "summary": "Gets all cover photos.",
                "operationId": "CoverPhotos_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CoverPhoto"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "CoverPhotos"
                ],
                "summary": "Posts the cover photo.",
                "operationId": "CoverPhotos_Post",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "coverPhoto",
                        "in": "body",
                        "description": "The cover photo.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CoverPhoto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/CoverPhotos/{id}": {
            "get": {
                "tags": [
                    "CoverPhotos"
                ],
                "summary": "Gets the cover photos.",
                "operationId": "CoverPhotos_Get_Single",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The cover photo identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "CoverPhotos"
                ],
                "summary": "Puts the cover photo.",
                "operationId": "CoverPhotos_Put",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "coverPhoto",
                        "in": "body",
                        "description": "The cover photo.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CoverPhoto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "CoverPhotos"
                ],
                "summary": "Deletes the specified cover photo.",
                "operationId": "CoverPhotos_Delete",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The cover photo identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets all users.",
                "operationId": "Users_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Posts the user.",
                "operationId": "Users_Post",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/Users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets the user.",
                "operationId": "Users_Get_Single",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Puts the user.",
                "operationId": "Users_Put",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes the specified user.",
                "operationId": "Users_Delete",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user identifier.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Object"
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "Activity": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                },
                "DueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Completed": {
                    "type": "boolean"
                }
            }
        },
        "Object": {
            "type": "object",
            "properties": {}
        },
        "Author": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "IDBook": {
                    "format": "int32",
                    "type": "integer"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                }
            }
        },
        "Book": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "PageCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "Excerpt": {
                    "type": "string"
                },
                "PublishDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "CoverPhoto": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "IDBook": {
                    "format": "int32",
                    "type": "integer"
                },
                "Url": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "ID": {
                    "format": "int32",
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        }
    }
}